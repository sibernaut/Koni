    <Window x:Class="Koni.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Koni.WPF"
        mc:Ignorable="d"
        Title="Koni" 
        MinHeight="450" MinWidth="600"
        Height="450" Width="600"
        WindowStartupLocation="CenterScreen" 
        Background="{StaticResource WindowBg}">
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Open" CanExecute="AvailableCommands_CanExecute" Executed="AddCommand_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindowCommands.Settings}" CanExecute="AvailableCommands_CanExecute" Executed="SettingsCommand_Executed"/>
        <CommandBinding Command="ApplicationCommands.Save" CanExecute="AvailableCommands_CanExecute" Executed="StartCommand_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindowCommands.Quit}" CanExecute="AvailableCommands_CanExecute" Executed="QuitCommand_Executed"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Style="{StaticResource BottomGrid}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Content="_Open" Command="ApplicationCommands.Open" Grid.Column="0" HorizontalAlignment="Left"/>
            <StackPanel Grid.Column="2" HorizontalAlignment="Right">
                <TextBlock VerticalAlignment="Center">
                    <Hyperlink Command="{x:Static local:MainWindowCommands.Settings}" 
                               TextDecorations="None">Settings</Hyperlink>
                </TextBlock>
                <Button Content="_Start" Command="ApplicationCommands.Save" IsDefault="True"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1" Background="Transparent" AllowDrop="True" Drop="ListBox_Drop">
            <TextBlock TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center">
                No files to process.
                <LineBreak/>
                You can drag file(s)/folder and drop here.
            </TextBlock>
        </Grid>
        <ListView x:Name="QueueView" Grid.Row="1" AllowDrop="True" Drop="ListBox_Drop" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListView.CommandBindings>
                <CommandBinding Command="{x:Static local:MainWindowCommands.Rename}" CanExecute="SelectedOneCommands_CanExecute" Executed="RenameCommand_Executed"/>
                <CommandBinding Command="{x:Static local:MainWindowCommands.Reset}" CanExecute="SelectedOneCommands_CanExecute" Executed="ResetCommand_Executed"/>
                <CommandBinding Command="{x:Static local:MainWindowCommands.Refresh}" CanExecute="AvailableCommands_CanExecute" Executed="RefreshCommand_Executed"/>
                <CommandBinding Command="ApplicationCommands.Delete" CanExecute="SelectedItemCommands_CanExecute" Executed="DeleteCommand_Executed"/>
                <CommandBinding Command="{x:Static local:MainWindowCommands.ClearAll}" CanExecute="AvailableCommands_CanExecute" Executed="ClearAllCommand_Executed"/>
            </ListView.CommandBindings>
            <ListView.Style>
                <Style TargetType="ListView">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Style>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock FontWeight="SemiBold" TextWrapping="WrapWithOverflow" Grid.ColumnSpan="2">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text" Value="{Binding Title}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSaved}" Value="True">
                                            <Setter Property="Text" Value="{Binding Title, StringFormat={}{0}✔}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="Filename:" Foreground="#6c6c6c" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right"/>
                        <TextBlock Text="{Binding FileName}" Grid.Column="1" Grid.Row="1" TextWrapping="WrapWithOverflow"/>
                        <TextBlock Text="Folder:" Foreground="#6c6c6c" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right"/>
                        <TextBlock Text="{Binding Directory}" Grid.Column="1" Grid.Row="2" TextWrapping="WrapWithOverflow"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <MenuItem Header="Rename" Command="{x:Static local:MainWindowCommands.Rename}"/>
                                <MenuItem Header="Reset" Command="{x:Static local:MainWindowCommands.Reset}"/>
                                <Separator/>
                                <MenuItem Header="Refresh" Command="{x:Static local:MainWindowCommands.Refresh}"/>
                                <Separator/>
                                <MenuItem Header="Delete" Command="ApplicationCommands.Delete"/>
                                <MenuItem Header="Clear All" Command="{x:Static local:MainWindowCommands.ClearAll}"/>
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </Grid>
</Window>
